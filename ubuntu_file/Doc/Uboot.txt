189  Work_led GPIO2_D3

Base:	
	GPIO2 base: ff780000

Offset:
	GPIO_SWPORTA_DR  0x0000
	GPIO_SWPORTA_DDR  0x0004 

Pin:
	gpio2_porta[31:24] I/O GPIO2_D[7:0] 


Operation:
	write  
	  addr: 0xff780000  value: 0x8000000       // 1<<27
	  addr: 0xff780004  value: 0x8000000	  // 1<<27



----------------------------------------------------------------------------

GRF_GPIO2A_IOMUX 	base: FF77_0000   offset: 0x0e000
GPIO2			base: FF78_0000   GPIO_SWPORTA_DR offset: 0	GPIO_SWPORTA_DDR  offset: 4


----------------------------------------------------------------------------

	        上电
	           |					  	           
	     读取电量	<----------------------------------------------------					           
	判断是否插入电源					           |
	           |					         	           |
           是 -------------------------------------------否			           |
            |                    	 	            |    	 	           |
            |			 	            |			           |
未满-------- 充满                 		    是否低于5%		           |
    |	      |			            |			           |
闪烁充电灯  常亮充电灯    		否-----------------------是	           |
    |	      |	       		 |             		    |	           |
    -------------       	                         关闭充电灯		充电灯闪烁           |        
             |		       	         	 |                                  |	           |
             -------------------------------------		    --------------> |
		        |					           |
    	              是否按住三秒                            			           |
              		        |                                	       		           |
      		 是------否                        	        		           |
       		 /            \            		       	        	           |
	               /                \				           |
	    点亮系统灯	   --------------------------------------------------->		         
   	    锁供电					    
   	    进入系统



状态:
1. 插入适配器: 插入  未插入
2. 电量: 充满 未满 低于5%
3. LED闪烁: 充电 充满 电量不足  不闪 

----------------------------------------------------------------------------

Uboot I2C 调用:
 i2c dev 
  static struct udevice *i2c_cur_bus
  uclass_get_device_by_seq(UCLASS_I2C, 4, &i2c_buss)
 
 i2c md
  struct udevice *dev
  i2c_get_chip(i2c_buss, 0xb, 1, &i2c_chip)
  dm_i2c_read(dev, addr, buf, 1)
  
----------------------------------------------------------------------------

修改 i2c-uclass.c +311
修改 lib/time.c +63
        lib/time.c +79

----------------------------------------------------------------------------

定时器 操作步骤:

初始化
1. 关闭使能
2. 设置模式: 用户自定义模式  自由运行模式
3. 设置中断Mask 

设置timer count 到  TIMERn_LOAD_COUNT0-3

使能timer TIMERn_CONTROLREG


TIMERn_LOAD_COUNT3 and TIMERn_ LOAD_COUNT2 为初始值
TIMERn_LOAD_COUNT1 and TIMERn_ LOAD_COUNT0 计数值

用户自定义模式操作:
 初始值增到长计数值后, 不会重新加载到初始值, 需要用户首先关闭timer, 接着继续初始化步骤设置

----------------------------------------------------------------------------

lowlevel_init:
1. 此函数主要作用为初始化中断控制器; 核心函数为 gic_init_secure_percpu
2. 检测是否开启多核CPU
----------------------------------------------------------------------------

TIMER:
  1. TIMER6  0xFF858000


Start.S
ldr x0, =0xff780000
ldr w1, [x0, #4]
orr w1, w1, #0x8000000
str w1, [x0, #4]

ldr w1, [x0]
orr w1, w1, #0x8000000
str w1, [x0]
